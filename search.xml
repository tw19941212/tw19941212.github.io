<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Dynamic Routing Between Capsules]]></title>
    <url>%2Fposts%2F9a4ff7b0%2F</url>
    <content type="text"><![CDATA[Capsule是一组vector in vector out的神经元,每一个胶囊代表某一特定实体,如对象或对象部分.其向量模长代表实体存在概率,向量参数代表实体实例化参数.低级别Capsule向量通过变化矩阵实现对高级别Capsule实体参数进行预测.当多个预测一致时,该高级别Capsule会更加活跃,借由动态路由算法加强预测.本文综合多篇中文和外文博客(原文链接均在参考链接中给出),结合自己理解转述而来,original paper by HintonCNN 的局限性需要大量训练数据(测试时只能识别已经训练的特征).Capsule能使用更少数据实现更好泛化不能处理复杂场景(如特征重叠),而Capsule能很好处理复杂场景(crowded scenes,如数字重叠),因为Capsule能很好实现特征分配(通过动态路由)Pooling层丢失大量信息,降低了空间分辨率(spatial resolution),所以输出对输入的微小变化不敏感,这在需要细节信息的任务(语义分割)上是糟糕的.当然通过构建复杂CNN网络能恢复信息损失.而Capsule能精确捕捉细节信息(pose information,如角度,厚度,大小,位置等)而不是丢失后再恢复信息.因此微小输入变化导致输出变化,这被称为等效性(equivariance).因此Capsule能在不同的视觉任务使用相同且简单的结构.CNN需要额外的组件来自动识别不同物体属于哪个对象(如这个胳膊属于这只羊),而Capsule提供了对象的层次结构.CNN忽略结构信息,仅仅考虑’有没有’,而没有考虑feature map的结构关系,包含位置,角度等.人类视觉识别任何物体都是由多个更小的实体组成.例如,树由树干,树冠和树根组成.这些部分形成层次结构.树冠还包括树枝和树叶.当我们看物体时,我们的眼睛就会形成一些固定点(fixation points),这些固定点的相对位置和性质有助于我们的大脑识别这个物体.因此,我们的大脑不必处理每个细节.只要看到一些树叶和树枝,我们的大脑就会认出树冠.并且树冠在树干上.结合这种层次信息,我们的大脑知道有一棵树.从现在开始,我们将对象的各个部分称为实体.(the parts of the objects as entities)CapsNets 到底是什么?简短的说,CapsNet由capsule(胶囊)而非神经元组成.胶囊是一小组神经元,其学习检测图像的给定区域内的特定对象(如矩形),并且输出向量(如8维向量).其长度表示对象存在的概率,其方向编码对象的姿势参数(如位置,旋转等).如果稍微改变输入对象(如移位,旋转,调整大小等),胶囊将输出相同长度的矢量,但方向略微不同.因此.胶囊具有等效性.与常规神经网络相似,CapsNet也有多个层.最下层的胶囊称为主胶囊(primary capsules),它们中的每一个都接收图像的一小部分作为输入(receptive field),并且它试图检测特定图案的存在和姿势.更高层的胶囊(routing capsules)可以检测更大和更复杂的物体(如船只).使用常规卷积层即可实现主要胶囊层.例如,论文中,使用两个卷积层,输出256个包含标量的6x6特征映射.重塑此输出以获得包含8维向量的32个6x6特征映射.最后,使用新颖的squash函数来确保这些向量的长度在0和1之间(表示概率).这给出了主胶囊的输出.下一层中的胶囊也会尝试检测物体及其姿势,但工作方式却截然不同,使用称为路由协议的算法.路由协议(Routing by agreement)假设只有两个主要胶囊:一个矩形胶囊和一个三角形胶囊,并假设它们都检测实体.注意到矩形和三角形在船的姿势上是一致的,而他们对房子的姿势非常不同意.因此,矩形和三角形很可能是同一艘船的一部分.(值得注意的是实体的形状及整体/部分之间的关系是在训练中学习的)由于现在确信矩形和三角形是船的一部分,因此将矩形和三角形胶囊的输出更多地发送到船舱中是有意义的,而对于房屋舱更少:这样,船舱将接收更有用的输入信号,房屋胶囊将收到更少的噪音.即在达成一致时增加路由权重,并在出现不一致时减少路由权重.路由协议算法涉及一致性检测+路由更新的几次迭代(注意,这发生在每次预测中,而不仅仅是训练时,不仅仅是一次).这在拥挤的场景中尤其有用.在混淆场景中很可能会收敛到一个更好的解释:底部的船,顶部的房子.模糊性被’解释了’:下方的矩形最好用船的存在来解释,这也解释了下三角形,一旦解释了这两个部分,其余部分很容易被解释为房屋.CapsNet背后的数学假设层$l$和$l+1$分别具有$m$和$n$个胶囊.我们的任务是在给定层$l$的激活向量下计算层$l+1$处胶囊的激活向量.设$u$表示第$l$层胶囊的激活向量.我们必须计算$v$,胶囊在$l+1$层的激活向量。对于层$l+1$处的胶囊$j$:我们首先通过层$l$处的胶囊计算预测向量.胶囊$i$($l$层)对胶囊$j$($l+1$层)的预测向量由下式给出$$\boldsymbol{\hat{\textbf{u}}}_{j|i} = \boldsymbol{\textbf{W}}_{ij}\boldsymbol{\textbf{u}}_{i}$$$W_ {ij}$是权重矩阵计算胶囊$j$的输出矢量.胶囊$j$输出向量是胶囊层$l$capsules胶囊给出的所有预测向量的加权和$$s_j = \sum_{i=1}^{m}{c_{ij}\boldsymbol{\hat{\textbf{u}}}_{j|i}}$$标量$c_ {ij}$称为胶囊$i$($l$层)对胶囊$j$($l+1$层)之间的耦合系数.系数由迭代动态路由算法确定在输出向量上应用squashing函数来获得激活向量动态路由算法层$l+1$的激活向量将反馈信号发送到层$l$处的胶囊.如果胶囊$j$($l+1$层)的激活向量与胶囊$i$($l$层)的预测矢量一致,则它们的点积应该比较大.因此,预测向量的’权重’在$j$的输出向量中增加.换句话说,那些贡献越大的预测向量在输出向量(激活向量)中具有更多的权重.循环持续4-5轮.(这像一种聚类算法,可以参考链接4)低级别胶囊对高级别胶囊的的预测权重总和应该为1$$c_{ij} = \frac{\exp(b_{ij})}{\sum_{k}{\exp(b_{ik})}}$$显然$$\sum_{k}{c_{ik}} = 1$$logit$b_{ij}$表示胶囊$i$($l$层)和胶囊$j$($l+1$层)是否具有强耦合.换句话说,它是由胶囊$i$解释胶囊$j$的存在性大小的量度.所有$b_{ij}$初始化应该是相等的.Routing algorithm:Given: 预测向量$\boldsymbol{\hat{\textbf{u}}}_{j|i}$, 迭代次数$r$对胶囊$i$(层$l$)和胶囊$j$(层$l+1$):$b_{ij} = 0$for $r$ iterations do:&emsp; 对所有胶囊$i$(层$l$): $c_{i }= softmax(b_i)$ (对高级别胶囊预测权重总和为1)&emsp; 对所有胶囊$j$(层$l+1$): $s_{j} = \sum_{i=1}^{m}{c_{ij}\boldsymbol{\hat{\textbf{u}}}_{j|i}}$ (输出向量是预测向量的加权和)&emsp; 对所有胶囊$j$(层$l+1$): $\textbf{v}_{j} = \textbf{squash}(\textbf{s}_{j})$ (应用激活函数)&emsp; 对所有胶囊$i$(层$l$)和胶囊$j$(层$l+1$): $b_{ij}=b_{ij}+\boldsymbol{\hat{\textbf{u}}}_{j|i} \cdot \textbf{v}_{j}$返回 $\textbf{v}_j$循环中的最后一行非常重要.这是路由发生的地方.如果乘积$\boldsymbol{\hat{\textbf{u}}}_{j|i} \cdot \textbf{v}_{j}$很大,它将增加$b_{ij}$,这将增加相应的耦合系数$c_{ij}$,这反过来将使乘积$\boldsymbol{\hat{\textbf{u}}}_{j|i} \cdot \textbf{v}_{j}$更大.(在链接4里面博主有自己的想法)路由算法优势在CNN中,存在池化层.通常使用MaxPool,这是一种非常原始的路由机制.局部池化中最活跃的特征(比如4x4网格)被路由到更高层,而更高级别的检测器在路由中没有发言权.将其与CapsNet中引入的协议路由机制进行比较,只有那些与高级探测器一致的功能才会被路由.这是CapsNet优于CNN的优势.它具有卓越的动态路由机制(动态,因为要路由的信息是实时确定的).优点和缺点Prons:更少训练数据等效性保留了输入对象的位置信息动态路由算法对重叠对象(特征)很有用自动计算了输入物体的层次结构激活向量可解释性更强Cons:训练慢(因为动态路由的内循环)没有在大数据集(如ImageNet)上测试在复杂数据集CIFAR10上效果不好不能区分彼此靠近的俩个相同类型的相同物体(Problem of crowding)参考链接Introducing capsule networksBeginner’s Guide to Capsule NetworksUnderstanding Capsule Network Architecture揭开迷雾，来一顿美味的Capsule盛宴Understanding Hinton’s Capsule Networks. Part I: Intuition.GitHub:awesome-capsule-networks一个注释非常详细的tensorflow源码CSDN:Dynamic Routing Between Capsules（NIPS2017）]]></content>
      <categories>
        <category>深度学习</category>
        <category>Capsule</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>paper</tag>
        <tag>CNN</tag>
        <tag>Capsule</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[序列模型]]></title>
    <url>%2Fposts%2F94c569ba%2F</url>
    <content type="text"><![CDATA[deeplearning.ai的第五课:Sequence Models.讲解了如基本的RNN网络,基本的循环单元到GRU,LSTM,再到双向RNN,还有深层版的模型.常用词嵌入的特性,不同词嵌入训练方法,集束搜索和Attention模型.Recurrent Neural NetworksNotation$X^{(i)&lt;t>}$表示第i个训练样本的第t个输入元素$Y^{(i)&lt;t>}$表示第i个训练样本的第t个输出元素$T_{x}^{(i)}$表示第i个训练样本的输入序列长度$T_{y}^{(i)}$表示第i个训练样本的输出序列长度Recurrent Neural Network Model标准神经网络的问题:输入输出长度可能不一致不能很好共享文本不同位置学习到的特征Backpropagation through time Different types of RNNs多输入多输出模型(翻译模型)多输入单输出模型(情感分析)单输入多输出模型(音乐生成)单输出单输出模型(简单神经网络)Language model and sequence generationSampling novel sequencesVanishing gradients with RNNs反向传播因为同样的梯度消失的问题,后面层的输出误差很难影响前面层的计算.不管输出是什么,不管是对的,还是错的,这个区域都很难反向传播到序列的前面部分,也因此网络很难调整序列前面的计算.如果不管的话,RNN会不擅长处理长期依赖的问题.梯度爆炸很容易发现,因为参数会大到崩溃,你会看到很多NaN,或者不是数字的情况,这意味着你的网络计算出现了数值溢出.Gated Recurrent Unit (GRU) 当$\Gamma_{u}$很接近0,可能是0.000001或者更小,这就不会有梯度消失的问题了.因为$\Gamma_{u}$很接近0,这就是说$c^{t}$几乎就等于$c^{t-1}$,而且$c^{t}$的值也很好地被维持了,即使经过很多很多的时间步.这就是缓解梯度消失问题的关键,因此允许神经网络运行在非常庞大的依赖词上Long Short Term Memory (LSTM)最后公式应该为$a^{t}=\Gamma_{o}*tanh(c^{t})$红线显示了只要你正确地设置了遗忘门和更新门,LSTM是相当容易把$c^{&lt;0>}$的值一直往下传递到右边,比如$c^{&lt;3>} = c^{&lt;0>}$.这就是为什么LSTM和GRU非常擅长于长时间记忆某个值,对于存在记忆细胞中的某个值.Deep RNNs对于RNN来说,有三层就已经不少了,不像卷积神经网络一样有大量的隐含层.或者每一个上面堆叠循环层,然后换成一些深的层,这些层并不水平连接,只是一个深层的网络.基本单元可以是最简单的RNN模型,也可以是GRU单元或者LSTM单元,并且,你也可以构建深层的双向RNN网络.自然语言处理与词嵌入词汇表征One-hot向量表征的一大缺点是把每个词孤立起来(内积均为0),稀疏,泛化能力不强.词嵌入(Word Embedding)则可以学习到俩个词语相似之处.使用词嵌入词嵌入迁移学习:从大量文本中学习词嵌入(1-100B words) or 下载预训练好的词嵌入模型用词嵌入模型迁移到新的只有少量标注训练集的任务中(100k words)可选: 继续微调(finetune)词嵌入(通常是数据集2比较大)注:语言模型和机器翻译使用词嵌入较少,因为这俩者数据集都较大词嵌入的特性词嵌入的一个显著成果就是,可学习的类比关系的一般性.举个例子,它能学会man对于woman相当于boy对于girl,因为man和woman之间和boy和girl之间的向量差在gender(性别)这一维都是一样的。嵌入矩阵学习词嵌入 研究发现,如果你想建立一个语言模型,用目标词的前几个单词作为上下文是常见做法.但如果目标是学习词嵌入,那么用这些其他类型的上下文,也能得到很好的词嵌入。Word2Vec句子:’I want a glass of orange juice to go along with my cereal.’Skip-Gram模型: 抽取上下文和目标词配对,构造一个监督学习问题.随机选一个词作为上下文词,比如选orange这个词,然后随机在一定词距内选另一个词,比如在上下文词前后5或10个词范围内选择目标词.关键是个softmax单元.矩阵$E$会有很多参数,所以矩阵$E$有对应所有嵌入向量$e_{c}$的参数,softmax单元也有$\theta_{t}$的参数.优化这些参数的损失函数,就会得到一个较好的嵌入向量集,这个就叫做Skip-Gram模型.它把一个像orange这样的词作为输入,并预测这个输入词从左数或从右数的某个词是什么词.算法首要的问题就是计算速度.在softmax模型中,每次需对词汇表中的所有词做求和计算.同论文提出的还有CBOW模型.负采样生成数据的方式是选择一个上下文词(orange),再选一个目标词(juice),这就是表的第一行,它给了一个正样本并给定标签为1.然后给定$K$次,用相同的上下文词,再从字典中选取随机的词(king,book,the,of)等,并标记0,这些就会成为负样本.如果从字典中随机选到的词,正好出现在了词距内,比如说在上下文词orange正负10个词之内也没太大关系.算法就是要分辨这两种不同的采样方式,这就是如何生成训练集的方法.小数据集的话,$K$从5到20比较好.如果数据集很大,$K$就选的小一点.模型基于逻辑回归模型,不同的是将一个sigmoid函数作用于$\theta_{t}^{T}e_{c}$,参数和之前一样.这可看做二分类逻辑回归分类器,但并不是每次迭代都训练全部10,000个词,只训练其中的5个(部分选出的词K+1个)采样负样本方法:$P\left( w_{i} \right) = \frac{f\left( w_{i} \right)^{\frac{3}{4}}}{\sum_{j = 1}^{10,000}{f\left( w_{j} \right)^{\frac{3}{4}}}}$GloVe 词向量GloVe算法做的就是使上下文和目标词关系开始明确化.$X_{ij}$是单词$i$在单词$j$上下文中出现的次数,那么这里$i$和$j$就和$t$和$c$的功能一样.若上下文指左右几个词,则会得出$X_{ij}$等于$X_{ji}$这个结论.其他时候大致相等.加权因子$f\left(X_{ij}\right)$就可以是一个函数,$X_{ij}$为0是为0(启发性方法见GloVe算法论文).$\theta_{i}$和$e_{j}$是对称的,而不像之前了解的模型,$\theta$和$e$功能不一样,因此最后结果可以取平均$e_{w}^{(final)}= \frac{e_{w} +\theta_{w}}{2}$.GloVe差距最小化处理$$\text{mini}\text{mize}\sum_{i = 1}^{10,000}{\sum_{j = 1}^{10,000}{f\left( X_{ij} \right)\left( \theta_{i}^{T}e_{j} + b_{i} + b_{j}^{‘} - logX_{ij} \right)^{2}}}$$两个单词之间有多少联系,$t$和$c$之间有多紧密,$i$和$j$之间联系程度如何,换句话说就是他们同时出现的频率是多少,这是由这个$X_{ij}$影响的.然后梯度下降来最小化$$\left( A\theta_{i} \right)^{T}\left( A^{- T}e_{j} \right) = \theta_{i}^{T}A^{T}A^{- T}e_{j} = \theta_{i}^{T}e_{j}$$通过GloVe算法得到的(关系)特征表示可能是原特征的潜在的任意线性变换,最终还是能学习出解决类似问题的平行四边形映射.Word2Vec,负采样,GloVe 词向量是三种学习词向量嵌入的方法.情绪分类情感分类一个最大的挑战就是可能标记的训练集没有那么多.对于情感分类任务来说,训练集大小从10,000到100,000个单词都很常见,甚至有时会小于10,000个单词,采用了词嵌入能够带来更好的效果,尤其是只有很小的训练集时.该算法实际上会把所有单词的意思给平均.问题就是没考虑词序.”Completely lacking in good taste, good service, and good ambiance.”,忽略词序,仅仅把所有单词的词嵌入加起来或者平均下来,分类器很可能认为这是一个好的评论.词嵌入除偏根据训练模型所使用的文本,词嵌入能够反映出性别、种族、年龄、性取向等其他方面的偏见,如Man对应Computer Programmer,那么Woman会对应?输出是Homemaker.偏差求平均中和.对于那些定义不确切的词可以将其处理一下,避免偏见.如doctor和babysitter想使之在性别方面是中立的,而girl、boy定义本身就含有性别均衡步.防止又引入其他偏差.论文作者训练一个分类器尝试解决哪些词是中立的.序列模型和注意力机制基础模型机器翻译到语音识别:seq2seq模型(Encoder-Decoder结构)集束搜索(Beam search)和注意力模型(Attention Model)音频模型选择最可能的句子机器翻译模型可以看作是条件语言模型,因为语言模型总是全0输入,随机地生成句子,机器翻译模型需要找到最可能的翻译,提供不同的输入(Encoder),目的是选择使句子出现可能性最大(Decoder),选择方法如Beam search,为什么不用贪心每次选择概率最大的一个词呢?这并不是最佳选择.集束搜索 当B=3时表示每次只考虑三个可能结果,B=1即为贪心在第一次词位置选出最可能的三个单词$y^{&lt;1>}$在第一步基础上计算最可能的三个单词对$P(y^{&lt;1>},y^{&lt;2>}|x)$继续增加下一个单词重复上述步骤改进集束搜索最大化$P(y^{&lt; 1 >}\ldots y^{&lt; T_{y}>}|X)$=$P(y^{&lt;1>}|X)$*$P(y^{&lt; 2 >}|X,y^{&lt; 1 >})$*$P(y^{&lt; 3 >}|X,y^{&lt; 1\ &gt;},y^{&lt; 2>})\ldots$$P(y^{&lt; T_{y}\ &gt;}|X,y^{&lt;1\ &gt;}\ldots y^{&lt; T_{y} - 1\ &gt;})$改成最大化$logP(y|x)$,能防止数值下溢原公式倾向于长度短小的翻译结果,因此可以长度归一化(除$T_{y}$)定向搜索的误差分析对结果将人工翻译和模型翻译对比,对比RNN模型出错率和集束搜索出错率,优化Bleu 得分这个例子中$p_{1}=5/7 p_{2}=4/6$,最后计算Bleu会在不同n-gram上取平均,但这样会侧重较短语句,因此会加上一个 BP(brevity penalty) 的惩罚因子.这给了机器翻译领域一个单一实数评估指标.Attention 模型 语音识别略,没看懂触发字检测把一个音频片段计算出它的声谱图特征得到特征向量参考链接网易云课堂Coursera Deep Learning 专项课程吴恩达《深度学习》系列课程笔记]]></content>
      <categories>
        <category>深度学习</category>
        <category>RNN</category>
      </categories>
      <tags>
        <tag>Coursera</tag>
        <tag>深度学习</tag>
        <tag>机器学习</tag>
        <tag>LSTM</tag>
        <tag>GRU</tag>
        <tag>RNN</tag>
        <tag>Attention</tag>
        <tag>Word Embedding</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[结构化机器学习项目]]></title>
    <url>%2Fposts%2F563918f4%2F</url>
    <content type="text"><![CDATA[deeplearning.ai的第三课:Structuring Machine Learning Projects.讲解了如何从误差角度分析改善模型,如何划分训练验证测试集,设定优化目标,偏差方差分析,数据不匹配问题,迁移学习和多任务学习,端到端学习的优缺点.机器学习(ML)策略(1)Introduction to ML StrategyChain of assumptions in ML(Orthogonalization正交化):训练集上表现好?(可加大网络结构或用更好优化算法)验证集上表现好?(正则化或加大训练集)测试集上表现好?(加大验证集)真实数据上表现好?(验证集设置不正确或损失函数不正确)Setting up your goal单一数字评估指标 (方便比较算法优劣)满足(Satisficing)的指标的优化(optimizing)的指标选择验证/测试集分布反映未来真实数据或期望优化的数据验证/测试集划分大小测试集大小需能反映系统性能,具有高置信度验证集需足够大以评估不同方法training setdevelopment settest set98%1%1%何时改变验证/测试集大小和评价指标在真实应用中表现不好的时候定义正确的评价指标能更好评估不同分类器优化评估指标Comparing to human-level performance为什么是人类水平?(若分类器比人类表现差该怎么办)获得更多标注的数据从人工错误分析:为什么人能分类正确?更好的偏差/方差分析理解人类表现人工分类误差是贝页斯误差近似提高模型表现技巧机器学习(ML)策略(2)Error Analysis误差分析:人工分析错误来源,统计不同错误类型占总数百分比,优先解决错误率最大深度学习算法对训练集随机误差(偶尔标记错误)具有鲁棒性,对系统误差(一直标记错误)无鲁棒性.验证集标记错误若严重影响评估算法能力,则需修正.验证集目标是帮助选择算法A &amp; B.对验证/测试集相同处理确保来自同一分布.考虑检查算法分类正确的样本是否标记错误而不仅是分类错误样本是否标记错误.训练集和验证/测试集或许来自稍微不同的分布.(这不会有太大影响)基本准则: 快速建立第一个系统,然后迭代优化.Mismatched training and dev/test set在不同划分(使dev和test来自同一分布)上训练和测试数据不匹配问题:Bayes optimal errortraining errortraining-dev errordev errormain problem0%1%9%10%variance0%11.5%10%data mismatch0%10%11%12%bias0%10%11%20%bias and data mismatch解决数据不匹配问题:收集更多像验证集的数据,或人工合成数据,但要避免从所有可能性的空间中只选了一小部分去模拟数据,造成过拟合人工合成的数据Learning from multiple tasks迁移学习起作用当任务A和任务B有相同的输入x(like image)任务A有大量数据可供学习对比任务B从A学习的低级别特征可能对B有帮助.多任务学习起作用当:在一系列任务上训练能从共享的低级别特征上收益时通常:对每一任务的数据量是近似相同的能训练足够大网络以至于能在所有任务上表现好End-to-end deep learning优点:让数据自学习不依赖手工特征,组件缺点:需要大量数据排除潜在有用手工特征,组件应用端到端深度学习关键问题: 你有足够的数据去学习从x映射到y的复杂性吗?参考链接网易云课堂Coursera Deep Learning 专项课程吴恩达《深度学习》系列课程笔记]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>Coursera</tag>
        <tag>深度学习</tag>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fposts%2F4a17b156%2F</url>
    <content type="text"><![CDATA[耗费时间俩天,终于把博客给搭建起来了.作为一个什么都不懂的机械狗,这个过程无比是痛苦的.遇到任何问题都是Google,广大网友的力量是强大的.前端的都厉害,界面挺美观.这里记录了搭建过程中所有参考的文章,让其他想搭建博客的小白不用繁琐的Google了,^_^为什么搭建个人博客emmm.之前就看到别人博客高端大气上档次,总想着自己也要弄一个,又觉得太麻烦.这里给我以后文章提几点:精髓短小坚持尽量短Over!人生苦短,开心最重要庄子参考链接HexoNexT 主题文档Hexo 官方文档搭建博客Hexo 博客搭建笔记Hexo+Github 博客搭建小白教程Hexo + NexT 站点配置与主题配置七牛云图床设置基本配置hexo-qiniu-sync 插件algolia 搜索设置基本配置Hexo+algolia 搜索不成功解决algolia搜索添加content之前文章假如删除了更新index好像只能手动官网删除.改正:hexo a –flush其他Hexo Next主题添加版权信息自定义Hexo博客文章模板编写和发布草稿hexo 摸爬滚打之进阶教程(博客压缩,链接唯一)Hexo有趣功能盘点主题优化Hexo优化自定义功能Hexo主题底部的版权声明问题新增阅读排行页面首页分页和归档分页不同首页文章,只显示标题next主题设置首页显示预览首页文章间距过宽Mist主题居中]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
</search>
